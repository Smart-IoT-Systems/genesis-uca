/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import java.util.*;

/**
 * Definition for type : Hello
 **/
public class Hello extends Component  {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "";
return result;
}

//Attributes
//Ports
//Message types
//Empty Constructor
public Hello() {
super();
}

//Getters and Setters for non readonly/final attributes
//Getters for Ports
private CompositeState buildHello(){
final FinalState state_Hello_null_HelloState = new FinalState("HelloState");
state_Hello_null_HelloState.onEntry(()->{
System.out.print("Hello World!");
System.out.println();
stop();
delete();
});
final CompositeState state_Hello = new CompositeState("null");
state_Hello.add(state_Hello_null_HelloState);
state_Hello.initial(state_Hello_null_HelloState);
return state_Hello;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
} else {
}
if (session == null){
//Init state machine
behavior = buildHello();
}
return this;
}

}
